{"version":3,"sources":["firebase.js","AuthProvider.js","Login.jsx","VideoCard.jsx","Home.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","firestore","storage","authContext","createContext","AuthProvider","props","useState","user","setUser","loading","setLoading","useEffect","unsub","onAuthStateChanged","a","displayName","email","uid","photoURL","docRef","collection","doc","get","exists","set","Provider","value","children","Login","useContext","to","type","class","onClick","signInWithPopup","VideoCard","playing","commentBoxOpen","setcommentBoxOpen","currCommentData","setcurrCommentData","comment","setcomment","commentsIDArr","data","comments","arr","i","length","commentDoc","push","console","log","f","className","name","map","el","src","photo","onChange","e","currentTarget","add","commentID","id","postDoc","postCommentsArr","update","url","pause","play","Home","posts","setPosts","onSnapshot","querySnapshot","docArr","docs","signOut","videoObj","files","size","alert","split","uploadTask","ref","Date","now","put","on","snapshot","getDownloadURL","then","likes","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c5914e5.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDrEXVuKV-fvM--ULatELX9EVJZ5uWnYSE\",\r\n  authDomain: \"reels-app-cc387.firebaseapp.com\",\r\n  projectId: \"reels-app-cc387\",\r\n  storageBucket: \"reels-app-cc387.appspot.com\",\r\n  messagingSenderId: \"109908015394\",\r\n  appId: \"1:109908015394:web:c16eed00f3819ffbe38d7b\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig); \r\n\r\n//flag -> using Google\r\n\r\nlet provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n//object jiske andar login , logout and signup hae\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const storage = firebase.storage();\r\n\r\nexport const signInWithGoogle = ()=>{\r\n  auth.signInWithPopup(provider)\r\n}\r\n\r\nexport default firebase;\r\n\r\n\r\n\r\n","import  { createContext, useEffect, useState } from 'react';\r\nimport { auth } from './firebase'\r\nimport { firestore } from './firebase';\r\n\r\nexport const authContext = createContext()\r\n\r\nlet AuthProvider = (props) => {\r\n\r\n    let [user, setUser] = useState(null);\r\n    let [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let unsub = auth.onAuthStateChanged(async(user) => {\r\n            if (user) {\r\n                let { displayName, email, uid, photoURL } = user;\r\n                \r\n                let docRef = firestore.collection(\"user\").doc(uid)\r\n\r\n                let documentSnapshot= await docRef.get()\r\n\r\n                if(documentSnapshot.exists == false){\r\n                    docRef.set({\r\n                        displayName,\r\n                        email,\r\n                        photoURL\r\n                    })\r\n                }\r\n\r\n                \r\n                setUser({ displayName, email, uid, photoURL })\r\n\r\n\r\n\r\n                \r\n\r\n\r\n            } else {\r\n                setUser(null)\r\n            }\r\n            \r\n            setLoading(false)\r\n        })\r\n\r\n        return ()=>{\r\n            unsub()\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        \r\n            <authContext.Provider value={user}>\r\n                {!loading && props.children}\r\n            </authContext.Provider>\r\n        \r\n    )\r\n}\r\n\r\nexport default AuthProvider;","import './Login.css';\r\n\r\nimport { signInWithGoogle, auth } from './firebase'\r\nimport { useContext, useEffect } from 'react';\r\nimport { authContext } from './AuthProvider';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nlet Login = ()=>{\r\n\r\n    let user = useContext(authContext);\r\n    // console.log(user)\r\n\r\n    return(\r\n        <div>\r\n            {user ? <Redirect to=\"/\" /> : \"\"}\r\n\r\n            <button type=\"button\" class=\"btn btn-primary mt-0 p-3\" onClick = {()=>{\r\n                signInWithGoogle()\r\n            }}>Login With Google</button>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { useContext, useEffect, useState } from \"react\";\r\nimport \"./VideoCard.css\";\r\nimport { authContext } from \"./AuthProvider\";\r\nimport { firestore } from \"./firebase\";\r\n\r\nlet VideoCard = (props) => {\r\n\r\n    let user = useContext(authContext)\r\n\r\n    let [playing, setplaying] = useState(false);\r\n    let [commentBoxOpen, setcommentBoxOpen] = useState(false);\r\n    let [currCommentData, setcurrCommentData] = useState(\"\");\r\n    let [comment, setcomment] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        let f = async () => {\r\n            let commentsIDArr = props.data.comments;\r\n            let arr = [];\r\n            for (let i = 0; i < commentsIDArr.length; i++) {\r\n\r\n                let commentDoc = await firestore.collection(\"comments\")\r\n                    .doc(commentsIDArr[i])\r\n                    .get()\r\n\r\n\r\n                arr.push(commentDoc.data())\r\n\r\n            }\r\n            console.log(arr);\r\n            setcomment(arr);\r\n\r\n        }\r\n\r\n        f();\r\n\r\n    }, [props])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"video-card\">\r\n                <p>{props.data.name}</p>\r\n                <span className=\"music-player\">\r\n                    <marquee>\r\n                        <span class=\"material-icons-outlined\">\r\n                            music_note\r\n                        </span>\r\n                        Song is being tested\r\n                    </marquee>\r\n                </span>\r\n\r\n\r\n                <span class=\"material-icons-outlined chat-icon\" onClick={() => {\r\n                    if (commentBoxOpen) {\r\n                        setcommentBoxOpen(false)\r\n                    } else {\r\n                        setcommentBoxOpen(true)\r\n                    }\r\n                }}>\r\n                    chat\r\n                </span>\r\n\r\n                <span class=\"material-icons-outlined like-icon\">\r\n                    favorite_border\r\n                </span>\r\n\r\n                {commentBoxOpen ? <div className=\"comment-box\">\r\n                    <div className=\"actual-comment\">\r\n                        {console.log(comment)}\r\n                            {comment.map((el) => {\r\n\r\n                            return (\r\n\r\n                                <div className=\"image-user\">\r\n                                    <img src={el.photo} />\r\n                                    <h2> {el.name} </h2>\r\n                                    <p>{el.comment}</p>\r\n                                </div>\r\n\r\n                            )\r\n\r\n\r\n\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"comment-form\">\r\n                        <input type=\"text\" value={currCommentData} onChange={(e) => {\r\n                            setcurrCommentData(e.currentTarget.value)\r\n                        }} />\r\n                        <button onClick={async () => {\r\n\r\n                            let docRef = await firestore.collection(\"comments\").add({\r\n                                name: user.displayName,\r\n                                comment: currCommentData,\r\n                                photo: user.photoURL\r\n                            })\r\n\r\n                            setcurrCommentData(\"\")\r\n\r\n                            // console.log(docRef);\r\n\r\n                            // console.log(docRef.id);\r\n\r\n                            // let doc = docRef.get();\r\n\r\n\r\n                            let commentID = docRef.id;\r\n\r\n\r\n\r\n                            let postDoc = await firestore\r\n                                .collection(\"posts\")\r\n                                .doc(props.data.id)\r\n                                .get()\r\n\r\n                            let postCommentsArr = postDoc.data().comments;\r\n\r\n\r\n\r\n                            postCommentsArr.push(commentID);\r\n\r\n                            // console.log(postCommentsArr);\r\n\r\n                            await firestore\r\n                                .collection(\"posts\")\r\n                                .doc(props.data.id)\r\n                                .update({\r\n                                    comments: postCommentsArr\r\n                                })\r\n\r\n                        }}>Post</button>\r\n                    </div>\r\n                </div> : \"\"}\r\n\r\n                <video className=\"video-tag\"\r\n                    src={props.data.url}\r\n                    onClick={(e) => {\r\n                        if (playing) {\r\n                            e.currentTarget.pause();\r\n                            playing = false;\r\n                        } else {\r\n                            e.currentTarget.play();\r\n                            playing = true\r\n                        }\r\n                    }}>\r\n\r\n                </video>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default VideoCard;","import { useContext, useEffect, useState } from \"react\";\r\nimport { auth, firestore, storage } from \"./firebase\"\r\nimport { authContext } from './AuthProvider'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Home.css\"\r\nimport VideoCard from './VideoCard'\r\n\r\nlet Home = ()=>{\r\n    let user = useContext(authContext);\r\n\r\n    let [posts,setPosts] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let unsub = firestore.collection(\"posts\").onSnapshot((querySnapshot)=>{\r\n\r\n            let docArr = querySnapshot.docs;\r\n\r\n            let arr = [];\r\n            for(let i = 0; i < docArr.length; i++){\r\n                arr.push({\r\n                    id:docArr[i].id,\r\n                    ...docArr[i].data()\r\n                })\r\n            }\r\n\r\n            setPosts(arr)\r\n\r\n        })\r\n\r\n        return ()=>{\r\n            unsub();\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <>\r\n            {user ? \"\" : <Redirect to=\"/login\" />}\r\n            <div className=\"video-container\">\r\n                {posts.map((el)=>{\r\n                    return <VideoCard key = {el.id} data = {el}/>\r\n                })}\r\n            </div>\r\n            <button className = \"logout-btn\" onClick = {()=>{\r\n                    auth.signOut();\r\n                }}>Logout\r\n            </button>\r\n\r\n            <input type=\"file\" onChange = {(e)=>{\r\n                let videoObj = e.currentTarget.files[0];\r\n                // console.log(videoObj)\r\n                let {name , size , type} = videoObj;\r\n                \r\n                size = size/1000000\r\n\r\n                if(size > 10){\r\n                    alert(\"please upload file less than 10 MB\");\r\n                    return;\r\n                }\r\n\r\n                type = type.split(\"/\")[0];\r\n\r\n                if(type != \"video\"){\r\n                    alert(\"please upload video only\");\r\n                    return;\r\n                }\r\n\r\n                let uploadTask = storage.ref(`/posts/${user.uid}/${Date.now() + \"-\" + name}`).put(videoObj);\r\n\r\n                uploadTask.on(\"state_changed\",null,null,()=>{\r\n                    uploadTask.snapshot.ref.getDownloadURL().then((url)=>{\r\n                        console.log(url)\r\n                        firestore.collection(\"posts\").add({\r\n                            name:user.displayName,\r\n                            url,\r\n                            likes:[],\r\n                            comments:[]\r\n                        })\r\n                    })\r\n                })\r\n                \r\n            }}/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import Login from './Login'\nimport Home from './Home';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport AuthProvider from './AuthProvider'\n\nimport { firestore } from './firebase';\n\nimport { useEffect } from 'react';\n\nlet App = () => {\n\n  // useEffect(() => {\n\n  //adding the data in firebase\n  // firestore.collection(\"user-data\").add({body:\"this is val-2\"})\n\n  //how to get data from the snapshot\n\n  // async function f() {\n\n  //   let querySnapshot = await firestore.collection(\"user\").get();\n\n  //   // console.log(querySnapshot)\n\n  //   for(let i = 0; i < querySnapshot.docs.length; i++){\n\n  //     console.log(querySnapshot.docs[i].data());\n\n  //   }\n  // }\n\n  // f();\n\n\n  //to get single data from firestore\n\n  // async function f() {\n\n  //   let docRef = firestore.collection(\"user\").doc(\"28BIlap6iIZCBKZVhVihasd\");\n\n  //   let documentSnapshot = await docRef.get()\n\n  //   console.log(documentSnapshot.exists)\n  // }\n\n  // f();\n\n\n\n  // }, [])\n  return (\n    <>\n      {/* <h1>Learning the fundamentals of firestore </h1> */}\n\n      <AuthProvider>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n\n          </Switch>\n        </Router>\n      </AuthProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}